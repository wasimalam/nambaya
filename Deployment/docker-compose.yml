version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  aspnetcore:
    driver: ${VOLUMES_DRIVER}
  mssql:
    driver: ${VOLUMES_DRIVER}
  postgres:
    driver: ${VOLUMES_DRIVER}

services:
### Centralgroup  #########################################
    centralgroup:
      hostname: ${HOSTNAME}
      build:
        context:  ${DOTNET_CODE_PATH_HOST}
        dockerfile: ./CentralGroup/API/Dockerfile
        args:         
          - no_proxy
      env_file:
        - ./.env
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      volumes:
        - ${DOTNET_CODE_PATH_HOST}:/source
      ports:
        - "${CENTRAL_GROUP_PORT}:80"
      depends_on:
        - mssql
      extra_hosts:
        - "service.qtlife.com:${DOCKER_HOST_IP}"
        - "identity.qtlife.com:${DOCKER_HOST_IP}"
      networks:
        - frontend
        - backend
### Cardiologist  #########################################
    cardiologist:
      hostname: ${HOSTNAME}
      build:
        context:  ${DOTNET_CODE_PATH_HOST}
        dockerfile: ./Cardiologist/API/Dockerfile
        args:         
          - no_proxy
      env_file:
        - ./.env
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      volumes:
        - ${DOTNET_CODE_PATH_HOST}:/source
      ports:
        - "${CARDIOLOGIST_PORT}:80"
      depends_on:
        - mssql
      extra_hosts:
        - "service.qtlife.com:${DOCKER_HOST_IP}"
        - "identity.qtlife.com:${DOCKER_HOST_IP}"
      networks:
        - frontend
        - backend
### FileSharing  #########################################
    filesharing:
      hostname: ${HOSTNAME}
      build:
        context:  ${DOTNET_CODE_PATH_HOST}
        dockerfile: ./FileSharing/API/Dockerfile
        args:         
          - no_proxy
      env_file:
        - ./.env
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      volumes:
        - ${DOTNET_CODE_PATH_HOST}:/source
      ports:
        - "${FILESHARING_PORT}:80"
      depends_on:
        - mssql
      extra_hosts:
        - "service.qtlife.com:${DOCKER_HOST_IP}"
        - "identity.qtlife.com:${DOCKER_HOST_IP}"
      networks:
        - frontend
        - backend
### Identity  #########################################
    identity:
      hostname: ${HOSTNAME}
      build:
        context:  ${DOTNET_CODE_PATH_HOST}
        dockerfile: ./Identity/API/Dockerfile
        args:         
          - no_proxy
      env_file:
        - ./.env
      environment:
        - ASPNETCORE_ENVIRONMENT=Development
      volumes:
        - ${DOTNET_CODE_PATH_HOST}:/source
      ports:
        - "${IDENTITY_PORT}:80"
      depends_on:
        - mssql
        - usermanagement
        - rabbitmq
      extra_hosts:
        - "service.qtlife.com:${DOCKER_HOST_IP}"
        - "identity.qtlife.com:${DOCKER_HOST_IP}"
      networks:
        - frontend
        - backend

### NambayaUser  #########################################
    nambayauser:
      hostname: ${HOSTNAME}
      build:
        context:  ${DOTNET_CODE_PATH_HOST}
        dockerfile: ./NambayaUser/API/Dockerfile
        args:         
          - no_proxy
      env_file:
        - ./.env
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      volumes:
        - ${DOTNET_CODE_PATH_HOST}:/source
      ports:
        - "${NAMBAYAUSER_PORT}:80"
      depends_on:
        - mssql
      extra_hosts:
        - "service.qtlife.com:${DOCKER_HOST_IP}"
        - "identity.qtlife.com:${DOCKER_HOST_IP}"        
      networks:
        - frontend
        - backend
### Patient  #########################################
    patient:
      hostname: ${HOSTNAME}
      build:
        context:  ${DOTNET_CODE_PATH_HOST}
        dockerfile: ./Patient/API/Dockerfile
        args:         
          - no_proxy
      env_file:
        - ./.env
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      volumes:
        - ${DOTNET_CODE_PATH_HOST}:/source
      ports:
        - "${PATIENT_PORT}:80"
      depends_on:
        - mssql
      extra_hosts:
        - "service.qtlife.com:${DOCKER_HOST_IP}"
        - "identity.qtlife.com:${DOCKER_HOST_IP}"
      networks:
        - frontend
        - backend
### Pharmacist  #########################################
    pharmacist:
      hostname: ${HOSTNAME}
      build:
        context:  ${DOTNET_CODE_PATH_HOST}
        dockerfile: ./Pharmacist/API/Dockerfile
        args:         
          - no_proxy
      env_file:
        - ./.env
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      volumes:
        - ${DOTNET_CODE_PATH_HOST}:/source
      ports:
        - "${PHARMACIST_PORT}:80"
      depends_on:
        - mssql
      extra_hosts:
        - "service.qtlife.com:${DOCKER_HOST_IP}"
        - "identity.qtlife.com:${DOCKER_HOST_IP}"
      networks:
        - frontend
        - backend
### UserManagement  #########################################
    usermanagement:
      hostname: ${HOSTNAME}
      build:
        context:  ${DOTNET_CODE_PATH_HOST}
        dockerfile: ./UserManagement/API/Dockerfile
        args:         
          - no_proxy
      env_file:
        - ./.env
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      volumes:
        - ${DOTNET_CODE_PATH_HOST}:/source
      ports:
        - "${USERMANAGEMENT_PORT}:80"
      depends_on:
        - mssql
      extra_hosts:
        - "service.qtlife.com:${DOCKER_HOST_IP}"
        - "identity.qtlife.com:${DOCKER_HOST_IP}"
      networks:
        - frontend
        - backend
### Logging  #########################################
    logging:
      hostname: ${HOSTNAME}
      build:
        context:  ${DOTNET_CODE_PATH_HOST}
        dockerfile: ./Logging/API/Dockerfile
        args:         
          - no_proxy
      env_file:
        - ./.env
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      volumes:
        - ${DOTNET_CODE_PATH_HOST}:/source
      ports:
        - "${LOGGING_PORT}:80"
      depends_on:
        - mssql
      extra_hosts:
        - "service.qtlife.com:${DOCKER_HOST_IP}"
        - "identity.qtlife.com:${DOCKER_HOST_IP}"
      networks:
        - frontend
        - backend
### mock  #########################################
    mock:
      hostname: ${HOSTNAME}
      build:
        context:  ${DOTNET_CODE_PATH_HOST}
        dockerfile: ./Navigator.Worker/Navigator.Worker.Mock/Dockerfile
        args:         
          - no_proxy
      env_file:
        - ./.env
      environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - NavigatorConfiguration__QuickEvaluationReportPath=/out
      volumes:
        - ${DOTNET_CODE_PATH_HOST}:/source
      depends_on:
        - mssql
      extra_hosts:
        - "service.qtlife.com:${DOCKER_HOST_IP}"
        - "identity.qtlife.com:${DOCKER_HOST_IP}"
      networks:
        - frontend
        - backend
#### angular #########################################
    angular:
      hostname: ${HOSTNAME}
      build:
        context: ./Presentation/webApp
        dockerfile: Dockerfile.dev
        args:         
          - no_proxy
      environment:
      - NODE_ENV=development
      env_file:
        - ./.env
      #volumes:
      #  - ${NG_CODE_PATH_HOST}:/usr/share/app
      ports:
        - "4200:80"
        - "${NG_HOST_HTTPS_PORT}:9222"
      networks:
        - frontend
        - backend
### MSSQL ################################################
    mssql:
      hostname: mssql
      build:
        context: ./mssql
      environment:
        - MSSQL_DATABASE=${MSSQL_DATABASE}
        - SA_PASSWORD=${MSSQL_PASSWORD}
        - ACCEPT_EULA=Y
        - MSSQL_AGENT_ENABLED=True
      volumes:
        - ${DATA_PATH_HOST}/mssql:/var/opt/mssql
      ports:
        - "${MSSQL_PORT}:1433"
      privileged: true
      networks:
        - backend
### Notification ################################################
    notification:
      hostname: ${HOSTNAME}
      build:
        context:  ${DOTNET_CODE_PATH_HOST}
        dockerfile: ./Notification/API/Dockerfile
        args:         
          - no_proxy
      env_file:
        - ./.env
      environment:
        - ASPNETCORE_ENVIRONMENT=Production
      volumes:
        - ${DOTNET_CODE_PATH_HOST}:/source
      depends_on:
        - rabbitmq
      networks:
        - frontend
        - backend
### RabbitMQ #############################################
    rabbitmq:
      build: ./rabbitmq
      ports:
        - "5671:5671"
        - "${RABBITMQ_NODE_HOST_PORT}:5672"
        - "${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672"
        - "${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671"
      privileged: true
      environment:
        - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
        - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
        - RABBITMQ_SSL_FAIL_IF_NO_PEER_CERT=false
        - RABBITMQ_SSL_VERIFY=verify_peer
        - RABBITMQ_SSL_CERTFILE=/certs/cert.pem
        - RABBITMQ_SSL_KEY_FILE=/certs/privkey.pem
        - RABBITMQ_SSL_CACERTFILE=/certs/chain.pem
      hostname: namayadock-rabbitmq
      volumes:
        - ${DATA_PATH_HOST}/rabbitmq:/var/lib/rabbitmq
        - /home/wasim/nambaya/tls/:/certs 
      networks:
        - backend